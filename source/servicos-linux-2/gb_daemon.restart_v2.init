#!/bin/sh
### BEGIN INIT INFO
# Provides:          gb_daemon
# Required-Start:    $local_fs $syslog
# Required-Stop:     $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: GBzando daemon
# Description:       The GBzando daemon.
#                    A test daemon which daemonizes itself, uses a pidfile and
#                    writes messages to the syslog.
### END INIT INFO

NAME="gb_daemon"
DESC="GB daemon"
PIDFILE="/run/$NAME.pid"
DAEMON="/usr/local/bin/$NAME"

[ -x "$DAEMON" ] || exit 0

. /lib/lsb/init-functions

do_start () {
    start-stop-daemon --start --quiet --pidfile "$PIDFILE" --exec "$DAEMON"
}

do_stop() {
    start-stop-daemon --stop --quiet --pidfile "$PIDFILE" --exec "$DAEMON" \
        --retry TERM/30/KILL/5
}

case "$1" in
    start)
        log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        retval="$?"
        case "$retval" in
            0|1)
                [ "$retval" -eq 1 ] && log_progress_msg "already started"
                log_end_msg 0
                ;;
            *)
                log_end_msg 1
                exit 1
                ;;
        esac
        ;;
    stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        retval="$?"
        case "$retval" in
            0|1)
                [ "$retval" -eq 1 ] && log_progress_msg "already stopped"
                log_end_msg 0
                ;;
            *)
                log_end_msg 1
                exit 1
                ;;
        esac
        ;;
    restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        retval="$?"
        case "$retval" in
            0|1)
                [ "$retval" -eq 1 ] && \
                    log_progress_msg "old process already stopped"
                do_start
                retval="$?"
                case "$retval" in
                    0)
                        log_end_msg 0
                        ;;
                    *)
                        [ "$retval" -eq 1 ] && \
                            log_progress_msg "old process still running"
                        log_end_msg 1
                        exit 1
                        ;;
            *)
                log_end_msg 1
                exit 1
                ;;
            esac
        esac
        ;;
    status)
        status_of_proc -p "$PIDFILE" "$DAEMON" "$DESC $NAME"
        exit "$?"
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|status}"
        exit 2
        ;;
esac
